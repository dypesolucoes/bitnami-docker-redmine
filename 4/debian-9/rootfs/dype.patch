Left base folder: C:\dype\source\redmine_github
Right base folder: C:\dype\source\redmine\redmine-3.3.0\apps\redmine\htdocs
--- app/controllers/timelog_controller.rb	2019-11-22 08:59:56.000000000 -0300
+++ app/controllers/timelog_controller.rb	2019-11-20 17:20:32.000000000 -0300
@@ -96,13 +96,18 @@
   def new
     @time_entry ||= TimeEntry.new(:project => @project, :issue => @issue, :author => User.current, :spent_on => User.current.today)
     @time_entry.safe_attributes = params[:time_entry]
   end
 
   def create
-    @time_entry ||= TimeEntry.new(:project => @project, :issue => @issue, :author => User.current, :user => User.current, :spent_on => User.current.today)
+    if request.post? and params[:time_entry][:user_id]
+      user = User.find(params[:time_entry][:user_id])
+    else
+      user = User.current
+    end
+    @time_entry ||= TimeEntry.new(:project => @project, :issue => @issue, :author => user, :user => user, :spent_on => User.current.today)
     @time_entry.safe_attributes = params[:time_entry]
     if @time_entry.project && !User.current.allowed_to?(:log_time, @time_entry.project)
       render_403
       return
     end
 
--- app/controllers/wiki_controller.rb	2019-11-22 08:59:56.000000000 -0300
+++ app/controllers/wiki_controller.rb	2019-11-20 17:20:32.000000000 -0300
@@ -158,25 +158,28 @@
     was_new_page = @page.new_record?
     @page.safe_attributes = params[:wiki_page]
 
     @content = @page.content || WikiContent.new(:page => @page)
     content_params = params[:content]
     if content_params.nil? && params[:wiki_page].present?
-      content_params = params[:wiki_page].slice(:text, :comments, :version)
+      content_params = params[:wiki_page].slice(:text, :comments, :version, :parent_title)
     end
     content_params ||= {}
 
     @content.comments = content_params[:comments]
     @text = content_params[:text]
     if params[:section].present? && Redmine::WikiFormatting.supports_section_edit?
       @section = params[:section].to_i
       @section_hash = params[:section_hash]
       @content.text = Redmine::WikiFormatting.formatter.new(@content.text).update_section(@section, @text, @section_hash)
     else
       @content.version = content_params[:version] if content_params[:version]
       @content.text = @text
+      if content_params[:parent_title].present?
+         @page.parent_title = content_params[:parent_title]
+      end
     end
     @content.author = User.current
 
     if @page.save_with_content(@content)
       attachments = Attachment.attach_files(@page, params[:attachments] || (params[:wiki_page] && params[:wiki_page][:uploads]))
       render_attachment_warning_if_needed(@page)
--- app/models/issue_query.rb	2019-11-22 08:59:56.000000000 -0300
+++ app/models/issue_query.rb	2019-11-20 17:20:31.000000000 -0300
@@ -42,13 +42,13 @@
     QueryColumn.new(
       :total_estimated_hours,
       :sortable => -> {
                      "COALESCE((SELECT SUM(estimated_hours) FROM #{Issue.table_name} subtasks" +
         " WHERE #{Issue.visible_condition(User.current).gsub(/\bissues\b/, 'subtasks')} AND subtasks.root_id = #{Issue.table_name}.root_id AND subtasks.lft >= #{Issue.table_name}.lft AND subtasks.rgt <= #{Issue.table_name}.rgt), 0)"
                    },
-      :default_order => 'desc'),
+      :default_order => 'desc', :totalable => true),
     QueryColumn.new(:done_ratio, :sortable => "#{Issue.table_name}.done_ratio", :groupable => true),
     TimestampQueryColumn.new(:created_on, :sortable => "#{Issue.table_name}.created_on", :default_order => 'desc', :groupable => true),
     TimestampQueryColumn.new(:closed_on, :sortable => "#{Issue.table_name}.closed_on", :default_order => 'desc', :groupable => true),
     QueryColumn.new(:last_updated_by, :sortable => lambda {User.fields_for_order_statement("last_journal_user")}),
     QueryColumn.new(:relations, :caption => :label_related_issues),
     QueryColumn.new(:attachments, :caption => :label_attachment_plural),
@@ -302,12 +302,21 @@
 
   # Returns sum of all the issue's estimated_hours
   def total_for_estimated_hours(scope)
     map_total(scope.sum(:estimated_hours)) {|t| t.to_f.round(2)}
   end
 
+  # Returns sum of all the issue's total_estimated_hours
+  def total_for_total_estimated_hours(scope)
+    total = scope.sum("COALESCE((SELECT SUM(estimated_hours) FROM #{Issue.table_name} subtasks" +
+      " WHERE subtasks.root_id = #{Issue.table_name}.root_id AND subtasks.lft >= #{Issue.table_name}.lft AND subtasks.rgt <= #{Issue.table_name}.rgt), 0)")
+
+
+    map_total(total) {|t| t.to_f.round(2)}
+  end
+
   # Returns sum of all the issue's time entries hours
   def total_for_spent_hours(scope)
     total = scope.joins(:time_entries).
       where(TimeEntry.visible_condition(User.current)).
       sum("#{TimeEntry.table_name}.hours")
 
--- app/models/mailer.rb	2019-11-22 08:59:56.000000000 -0300
+++ app/models/mailer.rb	2019-11-20 17:20:31.000000000 -0300
@@ -77,14 +77,14 @@
     message_id issue
     references issue
     @author = issue.author
     @issue = issue
     @user = user
     @issue_url = url_for(:controller => 'issues', :action => 'show', :id => issue)
-    subject = "[#{issue.project.name} - #{issue.tracker.name} ##{issue.id}]"
-    subject += " (#{issue.status.name})" if Setting.show_status_changes_in_mail_subject?
+    subject = "(#{issue.project.name} - #{issue.tracker.name} ##{issue.id})"
+    subject += " [#{issue.status.name}]" if Setting.show_status_changes_in_mail_subject?
     subject += " #{issue.subject}"
     mail :to => user,
       :subject => subject
   end
 
   # Notifies users about a new issue.
@@ -106,14 +106,14 @@
                     'Issue-Id' => issue.id,
                     'Issue-Author' => issue.author.login
     redmine_headers 'Issue-Assignee' => issue.assigned_to.login if issue.assigned_to
     message_id journal
     references issue
     @author = journal.user
-    s = "[#{issue.project.name} - #{issue.tracker.name} ##{issue.id}] "
-    s += "(#{issue.status.name}) " if journal.new_value_for('status_id') && Setting.show_status_changes_in_mail_subject?
+    s = "(#{issue.project.name} - #{issue.tracker.name} ##{issue.id}) "
+    s += "[#{issue.status.name}] " if journal.new_value_for('status_id') && Setting.show_status_changes_in_mail_subject?
     s += issue.subject
     @issue = issue
     @user = user
     @journal = journal
     @journal_details = journal.visible_details
     @issue_url = url_for(:controller => 'issues', :action => 'show', :id => issue, :anchor => "change-#{journal.id}")
--- app/views/issues/_action_menu.html.erb	2019-11-20 17:25:43.000000000 -0300
+++ app/views/issues/_action_menu.html.erb	2019-11-20 17:20:38.000000000 -0300
@@ -1,10 +1,11 @@
 <div class="contextual">
 <%= link_to l(:button_edit), edit_issue_path(@issue),
             :onclick => 'showAndScrollTo("update", "issue_notes"); return false;',
             :class => 'icon icon-edit', :accesskey => accesskey(:edit) if @issue.editable? %>
+<a href="javascript:if(confirm('Deseja realmente dividir a tarefa atual em subtarefas?')){window.location='psdype://redminesplitissue?issueId=<%=@issue.id%>'};void(0);" class="icon icon-edit" style="background-image: url('/images/text_list_bullets.png');">Split</a>
 <%= link_to l(:button_log_time), new_issue_time_entry_path(@issue),
             :class => 'icon icon-time-add' if User.current.allowed_to?(:log_time, @project) %>
 <%= watcher_link(@issue, User.current) %>
 <%= link_to l(:button_copy), project_copy_issue_path(@project, @issue),
             :class => 'icon icon-copy' if User.current.allowed_to?(:copy_issues, @project) && Issue.allowed_target_projects.any? %>
 <%= link_to l(:button_delete), issue_path(@issue),
--- app/views/layouts/base.html.erb	2019-11-22 08:59:56.000000000 -0300
+++ app/views/layouts/base.html.erb	2019-11-20 17:20:34.000000000 -0300
@@ -114,13 +115,15 @@
         <%= yield %>
         <%= call_hook :view_layouts_base_content %>
         <div style="clear:both;"></div>
     </div>
 </div>
 <div id="footer">
-    Powered by <%= link_to Redmine::Info.app_name, Redmine::Info.url %> &copy; 2006-2019 Jean-Philippe Lang
+    Powered by <%= link_to Redmine::Info.app_name, Redmine::Info.url %> &copy; 2006-2019 Jean-Philippe Lang
+	<br /><br />
+	<%= link_to 'Dype Updater', 'http://redmine.dype.com.br/mn/' %>
 </div>
 </div>
 
 <div id="ajax-indicator" style="display:none;"><span><%= l(:label_loading) %></span></div>
 <div id="ajax-modal" style="display:none;"></div>
 
--- public/javascripts/application.js	2019-11-22 08:59:58.000000000 -0300
+++ public/javascripts/application.js	2019-11-20 17:20:19.000000000 -0300
@@ -1063,5 +1063,8 @@
 $(document).ready(setupTabs);
 $(document).ready(setupFilePreviewNavigation);
 $(document).on('focus', '[data-auto-complete=true]', function(event) {
   inlineAutoComplete(event.target);
 });
+$(document).ready(function(){
+	var scriptPath = '/javascripts/dype/';
+	$.getScript( scriptPath + 'dype.main.js');
+});
--- public/stylesheets/application.css	2019-11-22 08:59:58.000000000 -0300
+++ public/stylesheets/application.css	2019-11-20 17:20:23.000000000 -0300
@@ -26,13 +26,14 @@
 }
 #top-menu a {color: #fff; margin-right: 8px; font-weight: bold;}
 #top-menu #loggedas { float: right; margin-right: 0.5em; color: #fff; }
 
 #account {float:right;}
 
-#header {min-height:5.3em;margin:0;background-color:#628DB6;color:#f8f8f8; padding: 4px 8px 20px 6px; position:relative;}
+/* #header {min-height:5.3em;margin:0;background-color:#628DB6;color:#f8f8f8; padding: 4px 8px 20px 6px; position:relative;}*/ 
+#header {margin:0;background-color:#628DB6;color:#f8f8f8; padding: 4px 8px 20px 6px; position:relative;}
 #header a {color:#f8f8f8;}
 #header h1 { overflow: hidden; text-overflow: ellipsis; white-space: nowrap;}
 #header h1 .breadcrumbs { display:block; font-size: .5em; font-weight: normal; }
 
 #quick-search {float:right;}
 #quick-search #q {width:130px; height:24px; box-sizing:border-box; vertical-align:middle; border:1px solid #ccc; border-radius:3px;}
@@ -85,13 +85,13 @@
 #admin-menu ul {margin: 0;  padding: 0;}
 #admin-menu li {margin: 0;  padding: 0 0 6px 0; list-style-type:none;}
 
 #main {flex-grow: 2; display: flex; flex-direction: row-reverse;}
 
 #sidebar{ flex-shrink: 0; padding-left: 20px; background: #EEEEEE; border-left: 1px solid #ddd}
-@media screen and (min-width: 0px) and (max-width: 1089px) {#sidebar{width: 22%;}}
+@media screen and (min-width: 0px) and (max-width: 1089px) {#sidebar{width: 12%;}}
 @media screen and (min-width: 1090px) and (max-width: 1279px) {#sidebar{width: 240px;}}
 @media screen and (min-width: 1280px) and (max-width: 1599px) {#sidebar{width: 280px;}}
 @media screen and (min-width: 1600px) and (max-width: 1919px) {#sidebar{width: 320px;}}
 @media screen and (min-width: 1920px) and (max-width: 2559px) {#sidebar{width: 360px;}}
 @media screen and (min-width: 2560px) {#sidebar{width: 380px;}}
 #sidebar h3{ font-size: 14px; margin-top:14px; color: #666;  }
@@ -1089,12 +1089,14 @@
 p.percent {font-size: 80%; margin:0;}
 p.progress-info {clear: left; font-size: 80%; margin-top:-4px; color:#777;}
 
 .version-overview table.progress {width:40em;}
 .version-overview table.progress td { height: 1.2em; }
 
+table.progress td.closed:after { content: attr(title); font-size: 10px; left: 0; position: absolute; text-align: center; top: 2px; width: 80px; }
+table.progress { position: relative; }
 /***** Tabs *****/
 #content .tabs {height: 2.6em; margin-bottom:1.2em; position:relative; overflow:hidden;}
 #content .tabs ul {margin:0; position:absolute; bottom:0; padding-left:0.5em; width: 2000px; border-bottom: 1px solid #bbbbbb;}
 #content .tabs ul li {
   float:left;
   list-style-type:none;
